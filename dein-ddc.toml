[[plugins]]
repo = 'Shougo/ddc.vim'
depends = 'denops.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-around'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/neco-vim'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-source-cmdline-history'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-ui-pum'
depends = 'ddc.vim'

[[plugins]]
repo = 'Shougo/pum.vim'
depends = 'ddc.vim'

[[multiple_plugins]]
plugins = ['ddc.vim', 'ddc-nvim-lsp', 'ddc-around', 'ddc-sorter_rank', 'ddc-matcher_head', 'ddc-converter_remove_overlap', 'neco-vim', 'ddc-source-cmdline-history', 'ddc-ui-pum', 'pum.vim']
hook_add ='''
call ddc#custom#patch_global('sources', [
  \ 'around',
  \ 'nvim-lsp',
  \ 'cmdline-history',
  \])

call ddc#custom#patch_global('sourceOptions', {
  \ '_': {
  \   'matchers': ['matcher_head'],
  \   'sorters': ['sorter_rank']},
  \ })

call ddc#custom#patch_global('sourceOptions', {
  \ '_': { 'matchers': ['matcher_head'] },
  \ 'around': {'mark': 'A'},
  \ 'nvim-lsp': {'mark': 'lsp'},
  \ 'cmdline-history': {'mark': 'history'},
  \ })


call ddc#custom#patch_global('ui', 'pum')
call ddc#custom#patch_global('autoCompleteEvents', ['InsertEnter', 'TextChangedI', 'TextChangedP', 'CmdlineChanged'])
nnoremap :       <Cmd>call CommandlinePre()<CR>:

function! CommandlinePre() abort
  cnoremap <Tab>   <Cmd>call pum#map#insert_relative(+1)<CR>
  cnoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
  cnoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
  cnoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
  cnoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
  cnoremap <C-e>   <Cmd>call pum#map#cancel()<CR>

  " Overwrite sources
  if !exists('b:prev_buffer_config')
    let b:prev_buffer_config = ddc#custom#get_buffer()
  endif
  call ddc#custom#patch_buffer('cmdlineSources',
  \ ['necovim', 'around'])

  autocmd User DDCCmdlineLeave ++once call CommandlinePost()
  autocmd InsertEnter <buffer> ++once call CommandlinePost()

  " Enable command line completion
  call ddc#enable_cmdline_completion()
endfunction
function! CommandlinePost() abort
  silent! cunmap <Tab>
  silent! cunmap <S-Tab>
  silent! cunmap <C-n>
  silent! cunmap <C-p>
  silent! cunmap <C-y>
  silent! cunmap <C-e>

  " Restore sources
  if exists('b:prev_buffer_config')
    call ddc#custom#set_buffer(b:prev_buffer_config)
    unlet b:prev_buffer_config
  else
    call ddc#custom#set_buffer({})
  endif
endfunction


call ddc#enable()
'''
